drop table IF EXISTS film_genres;
drop table IF EXISTS friends;
drop table IF EXISTS likes;
drop table IF EXISTS genres;
drop table IF EXISTS users;
drop table IF EXISTS films;
drop table IF EXISTS ratings;

create TABLE IF NOT EXISTS films (
    film_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL,
    duration INT NOT NULL,
    release_date TIMESTAMP NOT NULL,
    rating_id INT REFERENCES ratings (rating_id) ON delete RESTRICT ON update CASCADE
);

create TABLE IF NOT EXISTS ratings (
    rating_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating_name VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS film_genres (
    film_id INT NOT NULL REFERENCES films (film_id) ON delete RESTRICT ON update CASCADE,
    genre_id INT NOT NULL REFERENCES genres (genre_id) ON delete RESTRICT ON update CASCADE
);

create TABLE IF NOT EXISTS genres (
    genre_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS users (
    user_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name VARCHAR(255),
    login VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    birthday DATE
);

create TABLE IF NOT EXISTS likes (
    film_id INT NOT NULL REFERENCES films (film_id) ON delete RESTRICT ON update CASCADE,
    user_id INT NOT NULL REFERENCES users (user_id) ON delete RESTRICT ON update CASCADE
);

create TABLE IF NOT EXISTS friends (
    user_id INT NOT NULL REFERENCES users (user_id) ON delete RESTRICT ON update CASCADE,
    friend_id INT NOT NULL REFERENCES users (user_id) ON delete RESTRICT ON update CASCADE,
    status BOOLEAN NOT NULL
);